/**
 * This module was automatically generated by `ts-interface-builder`
 */
import * as t from "ts-interface-checker";
// tslint:disable:object-literal-key-quotes

export const Link = t.iface([], {
  "text": "string",
  "title": t.opt(t.union("string", "null")),
  "url": t.union("string", "null"),
});

export const Author = t.iface([], {
  "name": "string",
  "author_uid": t.union("string", "null"),
  "contact": t.opt(t.union("string", "null")),
  "urls": t.opt(t.union(t.array("Link"), "null")),
});

export const ArchiveFormat = t.union(t.lit('YearMonthDay'), t.lit('YearMonth'));

export const Blog = t.iface([], {
  "title": "string",
  "url": "string",
  "root": "string",
  "description": t.opt("string"),
  "language": t.opt("string"),
  "authors": t.opt(t.array("Author")),
  "archive_format": "ArchiveFormat",
  "archive_with_slug": "boolean",
  "index_posts": t.opt("number"),
  "default_opengraph_image": t.opt("string"),
});

export const Tag = t.iface([], {
  "name": "string",
  "text": "string",
});

export const PostStatus = t.union(t.lit('draft'), t.lit('publish'));

export const Post = t.iface([], {
  "date": "string",
  "title": "string",
  "author_uid": "string",
  "filename": t.opt("string"),
  "guid": t.opt(t.union("string", "null")),
  "content": t.opt(t.union("string", "null")),
  "excerpt": t.opt(t.union("string", "null")),
  "slug": t.opt(t.union("string", "null")),
  "tags": t.opt(t.union("string", "null")),
  "thumbnail_image": t.opt(t.union("string", "null")),
  "opengraph_image": t.opt(t.union("string", "null")),
  "previous_link": t.opt(t.union("Link", "null")),
  "next_link": t.opt(t.union("Link", "null")),
  "status": "PostStatus",
});

export const Template = t.func("string", t.param("posts", t.union("Post", t.array("Post"))), t.param("blog", "Blog", true), t.param("data", "any", true));

const exportedTypeSuite: t.ITypeSuite = {
  Link,
  Author,
  ArchiveFormat,
  Blog,
  Tag,
  PostStatus,
  Post,
  Template,
};
export default exportedTypeSuite;
